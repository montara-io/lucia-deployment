version: '3.8'

services:
  db:
    image: kartoza/postgis:13-3.1
    environment:
      - POSTGRES_DB=data_pipeline
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=postgres
      - ALLOW_IP_RANGE=0.0.0.0/0
    ports:
      - 5432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"
    networks:
      - lucia-network
  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://db:5432/data_pipeline -schemas=postgres -user=postgres -password=postgres migrate
    volumes:
      - ../env-setup/migrations:/flyway/sql
    networks:
      - lucia-network
    depends_on:
      db:
        condition: service_healthy
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - lucia-network
  kafka1:
    hostname: kafka1
    healthcheck:
      test: ["CMD-SHELL", "echo"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - lucia-network
  lucia-web-backend:
    image: montaraio/lucia-backend
    ports:
      - 3001:3000
    networks:
      - lucia-network
    environment:
      NODE_ENV: local
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PW: postgres
      DB_NAME: data_pipeline
      KAFKA_HOST: kafka1
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
  lucia-web-ui:
    image: montaraio/lucia-frontend
    ports:
      - 8080:80
    networks:
      - lucia-network
    environment:
      NODE_ENV: local
      BACKEND_URL: "http://localhost:3001"
    depends_on:
      lucia-web-backend:
        condition: service_started
  lucia-spark-endpoint:
    image: montaraio/lucia-data
    command: python -m flask --app spark_endpoint/app.py run --host=0.0.0.0
    ports:
      - 8181:5000
    networks:
      - lucia-network
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PW: postgres
      DB_NAME: data_pipeline
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
      kafka1:
        condition: service_healthy
  lucia-spark-job-processor:
    image: montaraio/lucia-data
    command: python -m spark_job_processor.app
    ports:
      - 8182:5000
    networks:
      - lucia-network
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PW: postgres
      DB_NAME: data_pipeline
      KAFKA_HOST: kafka1  
      KAFKA_PORT: 9092
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
      kafka1:
        condition: service_healthy
networks:
  lucia-network:


